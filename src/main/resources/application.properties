spring.h2.console.enabled=true
#Show Hibernate/JPA SQL Statements from Spring Boot
#Read this: https://www.baeldung.com/sql-logging-spring-boot
#While this is extremely simple, it's not recommended, as it directly unloads everything to standard output without any optimizations of a logging framework.
#The simplest way to dump the queries to standard out is to add the following to application.properties:
#spring.jpa.show-sql=true
#To beautify or pretty print the SQL, we can add:
#spring.jpa.properties.hibernate.format_sql=true
#Via Loggers
#The Spring/Hibernate classes, which generate SQL statements and set the parameters, already contain the code for logging them.
#However, the level of those log statements is set to DEBUG and TRACE respectively, which is lower than the default level in Spring Boot ? INFO.
#By adding these properties, we are just setting those loggers to the required level.
# logging.level.org.hibernate.SQL=DEBUG
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# Please note that script-based initialization i.e. through schema.sql and data.sql and
# Hibernate initialization together can cause some issues.
# Either we disable Hibernate automatic schema creation:
# spring.jpa.hibernate.ddl-auto=none
#The above will ensure that script-based initialization is performed using schema.sql and data.sql directly.
#If we still want to have both Hibernate automatic schema generation in conjugation with script-based schema creation
# and data population, we'll have to use the below:
# Read more here: https://docs.spring.io/spring-boot/docs/current/reference/html/howto.html#howto.data-initialization.using-basic-sql-scripts
spring.jpa.defer-datasource-initialization=true
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=<login user to smtp server>
#spring.mail.password=<login password to smtp server>
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
admin.username=admin_user
admin.email=admin_user@gmail.com
admin.password=admin_password
spring.security.user.name=security_user
spring.security.user.password=security_password